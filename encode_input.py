#!/usr/bin/env python3

import re
import numpy as np

def clean_corpus(text):

    text = re.sub(r"[^\w\s]", " ", text) 

    valid_chars = ['A','a','Á','á','B','b','C','c','Č','č','D','d','Đ','đ','E','e','F','f','G','g','H','h','I','i','J','j','K','k','L','l','M','m','N','n','Ŋ','ŋ','O','o','P','p','R','r','S','s','Š','š','T','t','Ŧ','ŧ','U','u','V','v','Z','z','Ž','ž', ' ']
    # clean non valid char
    text = "".join([ch for ch in text if ch in valid_chars])

    # valid_chars = ('ś', 'X', 'p', 'x', 'Ɛ', 'ã', 'ʹ', 'đ', 'ũ', 'ğ', 'ë', 'ḱ', 'ƫ', 'i', 'e', 'ŋ', 'È', 'ŵ', 'Î', 'ř', 'V', 'ā', 'ǁ', 'š', 'H', 's', 'Ř', 'Å', 'ʒ', 'Â', 'Ĩ', 'Ă', 'é', 'Ľ', 'ï', 'b', 'M', 'ð', 'J', 'í', '²', '\u2003', 'ń', 'ŝ', 'ϵ', 'N', 'ˇ', '\x85', 'Ë', 'r', 'ì', 'C', 'Đ', 'Ž', 'α', 'Ñ', 'ϱ', 'Ŝ', '\u2028', 'μ', 'T', 'ƚ', 'n', 'Ę', 'ǣ', 'η', 'Ƶ', 'Ý', 'ø', 'ć', 'ĺ', 'Ǩ', 'a', 'q', 'ϭ', 'ţ', 'Š', ' ', 'Ǉ', 'D', 'ą', 'W', 'Y', 'ƾ', 'Ś', 'ϯ', 'Ͳ', 'B', 'ē', 'h', 'Ğ', 'ʷ', '\u2002', 'č', 'Ⴞ', 'Č', 'Á', 'l', 'γ', 'ù', 'Ã', 'j', 'P', 'ǧ', 'c', 'v', 'U', 'ʼ', 'ß', 'Q', 'Ǯ', 'Ú', 'ū', 'S', 'à', 'F', 'z', 'ó', 'ё', 'Ϯ', 'ç', 'ț', 'ý', 'ŧ', 'ú', 'Ŭ', 'Ō', 'Ð', '\u2009', 'ě', 'ρ', 'Þ', 'ǥ', 'ǀ', 'Õ', 'ů', 'â', 'd', 'ȃ', 'Ő', 'Ȟ', 'R', 'ņ', 'Ǥ', 'g', 'Ø', '\n', 'Ǧ', 'ô', 'ƌ', 'm', 'å', 'ǯ', 'ê', 'K', 'ö', 'Ì', 'L', 'Ŋ', 'Ɵ', 'Ö', 'Ě', 'ї', 'Ć', 'è', 'ϴ', 'w', 'Ï', 'k', 'δ', 'A', '_', '¼', 'Ó', 'y', 'Ϭ', 'Æ', 'ƒ', 'á', '\xa0', 'É', 'Ɖ', 'ĩ', 'ñ', 'û', 'ǈ', 'Ŷ', 'I', 'ῡ', 'ė', 'u', '\u202f', 'ı', 'ÿ', 'O', 'ɸ', 'G', 'E', 'ϸ', 'Ʃ', 'Z', 'Ʒ', 'ō', 'ł', 'σ', 'æ', 'Ç', 'ä', 'f', 'Ä', 'ᵊ', '\u2001', 'Ü', 'ˈ', 'o', 'Ŧ', 'õ', 'ž', 'À', 'ü', 't', 'І', 'ǩ', 'ò')
    # text = ''.join([ch for ch in text if ch in valid_chars])
    return text

def encode_corpus():
    print("Reading free corpus...")
    with open('data/sme-freecorpus.txt', 'r', encoding='utf-8') as f:
        text = f.read()

    text = clean_corpus(text)
    # print(text[:300])
    # encode the text
    # 1. int2char, integers to characters
    # 2. char2int, characters to unique integers
    # chars = tuple(sorted(set(text)))
    # chars = ('ś', 'X', 'p', 'x', 'Ɛ', 'ã', 'ʹ', 'đ', 'ũ', 'ğ', 'ë', 'ḱ', 'ƫ', 'i', 'e', 'ŋ', 'È', 'ŵ', 'Î', 'ř', 'V', 'ā', 'ǁ', 'š', 'H', 's', 'Ř', 'Å', 'ʒ', 'Â', 'Ĩ', 'Ă', 'é', 'Ľ', 'ï', 'b', 'M', 'ð', 'J', 'í', '²', '\u2003', 'ń', 'ŝ', 'ϵ', 'N', 'ˇ', '\x85', 'Ë', 'r', 'ì', 'C', 'Đ', 'Ž', 'α', 'Ñ', 'ϱ', 'Ŝ', '\u2028', 'μ', 'T', 'ƚ', 'n', 'Ę', 'ǣ', 'η', 'Ƶ', 'Ý', 'ø', 'ć', 'ĺ', 'Ǩ', 'a', 'q', 'ϭ', 'ţ', 'Š', ' ', 'Ǉ', 'D', 'ą', 'W', 'Y', 'ƾ', 'Ś', 'ϯ', 'Ͳ', 'B', 'ē', 'h', 'Ğ', 'ʷ', '\u2002', 'č', 'Ⴞ', 'Č', 'Á', 'l', 'γ', 'ù', 'Ã', 'j', 'P', 'ǧ', 'c', 'v', 'U', 'ʼ', 'ß', 'Q', 'Ǯ', 'Ú', 'ū', 'S', 'à', 'F', 'z', 'ó', 'ё', 'Ϯ', 'ç', 'ț', 'ý', 'ŧ', 'ú', 'Ŭ', 'Ō', 'Ð', '\u2009', 'ě', 'ρ', 'Þ', 'ǥ', 'ǀ', 'Õ', 'ů', 'â', 'd', 'ȃ', 'Ő', 'Ȟ', 'R', 'ņ', 'Ǥ', 'g', 'Ø', '\n', 'Ǧ', 'ô', 'ƌ', 'm', 'å', 'ǯ', 'ê', 'K', 'ö', 'Ì', 'L', 'Ŋ', 'Ɵ', 'Ö', 'Ě', 'ї', 'Ć', 'è', 'ϴ', 'w', 'Ï', 'k', 'δ', 'A', '_', '¼', 'Ó', 'y', 'Ϭ', 'Æ', 'ƒ', 'á', '\xa0', 'É', 'Ɖ', 'ĩ', 'ñ', 'û', 'ǈ', 'Ŷ', 'I', 'ῡ', 'ė', 'u', '\u202f', 'ı', 'ÿ', 'O', 'ɸ', 'G', 'E', 'ϸ', 'Ʃ', 'Z', 'Ʒ', 'ō', 'ł', 'σ', 'æ', 'Ç', 'ä', 'f', 'Ä', 'ᵊ', '\u2001', 'Ü', 'ˈ', 'o', 'Ŧ', 'õ', 'ž', 'À', 'ü', 't', 'І', 'ǩ', 'ò')
    chars = ['A','a','Á','á','B','b','C','c','Č','č','D','d','Đ','đ','E','e','F','f','G','g','H','h','I','i','J','j','K','k','L','l','M','m','N','n','Ŋ','ŋ','O','o','P','p','R','r','S','s','Š','š','T','t','Ŧ','ŧ','U','u','V','v','Z','z','Ž','ž', ' ']
    int2char = dict(enumerate(chars))
    char2int = {ch: ii for ii, ch in int2char.items()}

    print(char2int)
    print("Encoding text...")

    # encode the text
    encoded = np.array([char2int[ch] for ch in text])

    with open("./encoded-corpus.bin", "wb") as f:
        np.save(f, encoded)

    with open("./corpus-chars.txt", "w") as f:
        f.write("".join(chars))

def load_encoded_corpus():
    return np.load('./encoded-corpus.bin')

def load_corpus_chars():
    with open("./corpus-chars.txt", "r") as f:
        return f.read()

if __name__ == "__main__":
    encode_corpus()
